<configuration>

<!--    Obtenga claves de "application.properties" -->
    <property scope="context" resource="application.properties" />

<!--  Para usar uno o varios appender's (medio donde se ve el log) - En este caso: Consola  -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
<!--            La forma de como se muestran los errores-->
<!--            [%thread] -> Normalmente se trabaja con el main-->
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.FileAppender" >
<!--        Ruta del archivo-->
        <file>logs/application.log</file>
        <append>true</append>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE_CONTROLLER" class="ch.qos.logback.core.FileAppender" >
<!--        Ruta del archivo-->
        <file>logs/controller.log</file>
        <append>true</append>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
<!--        De forma predeterminara utilizara esta ruta-->
        <file>app.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
<!--            Se modifica el nombre a traves de un patron - en este caso 1 archivo log por segundo -->
            <fileNamePattern>logs/app-%d{yyyy-MM-dd-hh-mm-ss}.%i.log</fileNamePattern>
<!--            TamaÃ±o maximo del arhivo -->
            <maxFileSize>1000KB</maxFileSize>
<!--            Hasta 7 archivos de log, si se supera los 7 se borran los archivos de manera historica-->
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="SIFT" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
<!--            Nombra cada archivo de log con este key-->
            <key>userid</key>
            <defaultValue>unknown</defaultValue>
        </discriminator>
        <sift>
            <appender name="FILE" class="ch.qos.logback.core.FileAppender">
                <file>logs/user-${userid}.log</file>
                <encoder>
                    <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n</pattern>
                </encoder>
            </appender>
        </sift>
    </appender>

    <!--  Definimos un logger en el nivel info (El que emite los log's)  -->
<!--    Se mostrara los log's en la consola y en el archivo-->
<!--    <root level="info">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="SIFT" />
    </root>-->

<!--    Appender de acuerdo al entorno de trabajo -->
    <if condition='property("env").equals("prod")'>
        <then>
            <root level="INFO">
                <appender-ref ref="STDOUT" />
            </root>
        </then>
    </if>

    <if condition='property("env").equals("test")'>
        <then>
            <root level="DEBUG">
                <appender-ref ref="STDOUT" />
            </root>
<!--            Logger a medida para el paquete controller-->
<!--            root es el logger principal y todos lo logger que se definan van hererar la configuracion de root-->
<!--            additivity=false -> Para indicar que las trazas del root no se agreguen a este appender -->
            <logger name="es.edu.escuela_it.microservices.controller" level="ERROR" additivity="false">
                <appender-ref ref="STDOUT" />
            </logger>
        </then>
    </if>

</configuration>
